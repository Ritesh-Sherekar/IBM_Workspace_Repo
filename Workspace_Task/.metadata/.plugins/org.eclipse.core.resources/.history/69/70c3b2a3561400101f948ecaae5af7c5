DECLARE Schema_I EXTERNAL CHARACTER;
DECLARE DSN_Name EXTERNAL CHARACTER;

CREATE COMPUTE MODULE Acc_Linking_Varification_Flow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- Check Method-----
		DECLARE method_type CHARACTER;
		SET method_type = SUBSTRING(InputRoot.HTTPInputHeader."X-Original-HTTP-Command" FROM 1 FOR 4);

		IF method_type = 'POST' THEN
			CALL CopyEntireMessage();
		ELSE
			THROW USER EXCEPTION CATALOG 'BIPmsgs' MESSAGE 2230 VALUES('Unsupported HTTP Method');
			PROPAGATE TO TERMINAL 'Catch';
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE inref REFERENCE TO InputRoot.JSON.Data;
		DECLARE bank_ID INTEGER inref.bankId;
		DECLARE acc_No INTEGER inref.accNo;
		DECLARE otp INTEGER inref.token;
		DECLARE reff_ID CHARACTER inref.referenceId;

		DECLARE sqlStatement CHARACTER;
		SET sqlStatement = 'SELECT * FROM '|| Schema_I ||'.' ||'ACC_LINKING_REQ_TABLE  WHERE BANK_ID = ? AND ACC_NO = ? AND REF_NO = ?';
		SET Environment.Data[] = PASSTHRU(sqlStatement TO Database.{DSN_Name} VALUES(bank_ID, acc_No, reff_ID));

		DECLARE Acc_Number CHARACTER CAST(CAST(Environment.Data.ACC_NO AS DECIMAL CCSID 1208) AS CHARACTER CCSID 1208 );
		DECLARE otp_d CHARACTER CAST(CAST(Environment.Data.OTP AS DECIMAL CCSID 1208) AS CHARACTER CCSID 1208 );
		DECLARE b_id CHARACTER CAST(CAST(Environment.Data.BANK_ID AS DECIMAL CCSID 1208) AS CHARACTER CCSID 1208 );
		DECLARE dbTime TIMESTAMP CAST(Environment.Data.OTP_GEN_TIME AS TIMESTAMP);

		DECLARE currentTime TIMESTAMP CURRENT_TIMESTAMP;
		DECLARE Validate_time TIMESTAMP;
		SET Validate_time = currentTime - INTERVAL '5' MINUTE;

		IF Environment.Data.REF_NO = reff_ID AND Environment.Data.OTP = otp AND Validate_time < dbTime THEN
			DECLARE sqlStatement1 CHARACTER;
			SET sqlStatement1 ='UPDATE ' || Schema_I || '.ACC_LINKING_REQ_TABLE ' ||'SET OTP = NULL, REF_NO = NULL, OTP_GEN_TIME = NULL ' ||'WHERE ACC_NO = ? AND REF_NO = ?';

			SET Environment.Data = PASSTHRU(sqlStatement1 TO Database.{DSN_Name} VALUES(acc_No, reff_ID));
			SET OutputRoot.JSON.Data.Status = 'Success';

		ELSEIF Validate_time > dbTime AND Environment.Data.OTP = otp THEN

			DECLARE sqlStatement2 CHARACTER;
			SET sqlStatement2 ='UPDATE ' || Schema_I || '.ACC_LINKING_REQ_TABLE ' ||'SET OTP = NULL, REF_NO = NULL, OTP_GEN_TIME = NULL ' ||'WHERE ACC_NO = ? AND REF_NO = ?';

			SET Environment.Data2 = PASSTHRU(sqlStatement2 TO Database.{DSN_Name} VALUES(acc_No, reff_ID));
			SET OutputRoot.JSON.Data.Status = 'OTP Expired';

		ELSEIF Environment.Data.OTP <> otp THEN
			SET OutputRoot.JSON.Data.Status = 'Invalid OTP';

		END IF;

	END;
END MODULE;