CREATE COMPUTE MODULE Task_Validation_Flow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN

		DECLARE chaID CHARACTER InputRoot.XMLNSC.Root.Header.channelId;
		DECLARE outt CHARACTER;

		IF chaID = 'TPH' THEN
			SET outt = 'out';

		ELSE
			IF chaID = 'FCS' THEN
				SET outt = 'out1';
			END IF;
		END IF;


		DECLARE inref3 REFERENCE TO InputRoot.XMLNSC.Root.Body.Data.catalog.book[1];
		DECLARE j INTEGER 1 ;
		WHILE LASTMOVE(inref3) DO
			DECLARE authorNN CHARACTER FIELDVALUE(inref3.author);
			IF authorNN = 'Corets, Eva' THEN
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book NAME 'author' VALUE FIELDVALUE(inref3.author);
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book.title VALUE InputRoot.XMLNSC.Root.Body.Data.catalog.book.title;
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book.genre VALUE InputRoot.XMLNSC.Root.Body.Data.catalog.book.genre;
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book.price VALUE InputRoot.XMLNSC.Root.Body.Data.catalog.book.price;
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book.publish_date VALUE InputRoot.XMLNSC.Root.Body.Data.catalog.book.publish_date;
				CREATE LASTCHILD OF OutputRoot.XMLNSC.Root.Body.catalogs[j].book.description VALUE InputRoot.XMLNSC.Root.Body.Data.catalog.book.description;
			END IF;
			SET j = j + 1;
			MOVE inref3 NEXTSIBLING;
		END WHILE;



		PROPAGATE TO TERMINAL outt;




	END;
END MODULE;