/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		--CALL CopyMessageHeaders();
	      CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		-- Take the service ID and Customer ID from URL
		DECLARE inref_SER_ID REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString.SER_ID;
		DECLARE inref_CUS_ID REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString.CUS_ID;

        -- Fetch Backend URL uisng Service ID
		DECLARE ser_url_q CHARACTER;
		SET ser_url_q = 'select SER_URL from SERVICE_TABLE where SER_ID = ?';
		DECLARE SER_URL ROW;
		SET SER_URL = PASSTHRU(ser_url_q , inref_SER_ID);
		
		-- we can not direcly access the ROW data , for that use FILDVALUE
		DECLARE SER_URL_CHAR CHARACTER;
		SET SER_URL_CHAR = FIELDVALUE(SER_URL.SER_URL);

        -- Overriding the Request URL
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = SER_URL_CHAR;
		
		-- Set the customer ID in the Header to send the Backend flow
		DECLARE headerValue CHARACTER inref_CUS_ID;
		SET OutputRoot.HTTPInputHeader."Cus_ID" = inref_CUS_ID;
	END;
