/*EATE FUNCTION Main() RETURNS BOOLE*/
    BEGIN
        -- CALL CopyMessageHeaders();
        CALL CopyEntireMessage();
        RETURN FALSE;
    END;

    CREATE PROCEDURE CopyMessageHeaders() BEGIN
        DECLARE I INTEGER 1;
        DECLARE J INTEGER;
        SET J = CARDINALITY(InputRoot.*[]);
        WHILE I < J DO
            SET OutputRoot.*[I] = InputRoot.*[I];
            SET I = I + 1;
        END WHILE;
    END;

    CREATE PROCEDURE CopyEntireMessage() BEGIN
        DECLARE chaID CHARACTER InputRoot.XMLNSC.Root.Header.channelId;
        DECLARE outt CHARACTER;

        -- Determine output terminal
        IF chaID = 'TPH' THEN
            SET outt = 'out';
        ELSEIF chaID = 'FCS' THEN
            SET outt = 'out1';
        END IF;

        -- Get dynamic field name from the input structure
        DECLARE fild CHARACTER FIELDNAME(InputRoot.XMLNSC.Root.Body.Data.*[<]);

        -- Reference the dynamic field
        DECLARE dynamicField REFERENCE TO InputRoot.XMLNSC.Root.Body.Data.*[FIELDNAME(fild)];
        DECLARE inref3 REFERENCE TO dynamicField.book[1];

        -- Loop through books and filter as needed
        DECLARE j INTEGER 1;
        WHILE LASTMOVE(inref3) DO
            DECLARE authorNN CHARACTER inref3.author;
            IF authorNN = 'Corets, Eva' AND chaID = 'TPH' THEN
                -- Set dynamic output structure
                SET OutputRoot.XMLNSC.Root.Body.Data.{fild}.book[j] = inref3;
                SET j = j + 1;
            END IF;
            MOVE inref3 NEXTSIBLING;
        END WHILE;

        -- Propagate to the determined terminal
        PROPAGATE TO TERMINAL outt;
    END;
