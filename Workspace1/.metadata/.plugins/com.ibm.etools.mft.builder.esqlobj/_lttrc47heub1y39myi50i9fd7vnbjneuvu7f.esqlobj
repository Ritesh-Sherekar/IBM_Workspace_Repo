/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
	-- Copy the input message to the output message
SET OutputRoot = InputRoot;

-- Declare a reference to the JSON data in the input message
DECLARE inputJSON REFERENCE TO InputRoot.JSON.Data;

-- Extract the ID and Name fields from the JSON input
DECLARE extractedID CHARACTER;
DECLARE extractedName CHARACTER;

SET extractedID = inputJSON.ID;
SET extractedName = inputJSON.Name;

-- Set parameters for the Database node
-- Ensure parameters are set correctly in the output local environment
SET OutputLocalEnvironment.Destination.SQL.Parameter[1] = extractedID;
SET OutputLocalEnvironment.Destination.SQL.Parameter[2] = extractedName;

-- Optional: Add a status message to be sent back to the client
SET OutputRoot.JSON.Data.Status = 'Data ready for insertion';

	END;
